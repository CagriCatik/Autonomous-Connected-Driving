"use strict";(self.webpackChunkacd=self.webpackChunkacd||[]).push([[7944],{7436:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"ros2/build","title":"Building a ROS2 Workspace Using colcon","description":"Building a ROS2 workspace is a crucial step in developing ROS2 applications. The process involves setting up the workspace, adding packages, and using colcon to compile the code. This documentation provides a comprehensive guide for building a ROS2 workspace using colcon, suitable for both beginners and advanced users.","source":"@site/docs/ros2/04_build.md","sourceDirName":"ros2","slug":"/ros2/build","permalink":"/Autonomous-Connected-Driving/docs/ros2/build","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/ros2/04_build.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"ros2Sidebar","previous":{"title":"Using Docker for ROS2 Development","permalink":"/Autonomous-Connected-Driving/docs/ros2/docker"},"next":{"title":"Creating Your First ROS2 Publisher Node","permalink":"/Autonomous-Connected-Driving/docs/ros2/publisher"}}');var c=n(4848),r=n(8453);const l={},o="Building a ROS2 Workspace Using colcon",d={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step-by-Step Guide",id:"step-by-step-guide",level:2},{value:"1. Initializing the Workspace",id:"1-initializing-the-workspace",level:3},{value:"2. Adding Packages to the Workspace",id:"2-adding-packages-to-the-workspace",level:3},{value:"3. Building the Workspace",id:"3-building-the-workspace",level:3},{value:"Key Points:",id:"key-points",level:4},{value:"4. Sourcing the Workspace",id:"4-sourcing-the-workspace",level:3},{value:"5. Common Build Options",id:"5-common-build-options",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Advanced Topics",id:"advanced-topics",level:2},{value:"Using Overlays",id:"using-overlays",level:3},{value:"Customizing the Build Process",id:"customizing-the-build-process",level:3},{value:"Conclusion",id:"conclusion",level:2}];function t(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.header,{children:(0,c.jsxs)(s.h1,{id:"building-a-ros2-workspace-using-colcon",children:["Building a ROS2 Workspace Using ",(0,c.jsx)(s.code,{children:"colcon"})]})}),"\n",(0,c.jsxs)(s.p,{children:["Building a ROS2 workspace is a crucial step in developing ROS2 applications. The process involves setting up the workspace, adding packages, and using ",(0,c.jsx)(s.code,{children:"colcon"})," to compile the code. This documentation provides a comprehensive guide for building a ROS2 workspace using ",(0,c.jsx)(s.code,{children:"colcon"}),", suitable for both beginners and advanced users."]}),"\n",(0,c.jsx)(s.hr,{}),"\n",(0,c.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,c.jsx)(s.p,{children:"Before proceeding, ensure you have the following:"}),"\n",(0,c.jsxs)(s.ol,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"ROS2 Installed"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Ensure that the ROS2 distribution (e.g., Humble, Foxy) is installed on your system. You can verify this by checking if the ",(0,c.jsx)(s.code,{children:"ros2"})," command is available in your terminal."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"colcon"})," Installed"]}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.code,{children:"colcon"})," is a command-line tool for building and testing ROS2 packages. Install it using:","\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"sudo apt install python3-colcon-common-extensions\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Workspace Setup"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Create and navigate to your ROS2 workspace:","\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"mkdir -p ~/ros2_ws/src\ncd ~/ros2_ws\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.hr,{}),"\n",(0,c.jsx)(s.h2,{id:"step-by-step-guide",children:"Step-by-Step Guide"}),"\n",(0,c.jsx)(s.h3,{id:"1-initializing-the-workspace",children:"1. Initializing the Workspace"}),"\n",(0,c.jsxs)(s.p,{children:["The ROS2 workspace structure consists of a ",(0,c.jsx)(s.code,{children:"src"})," directory where the source code for packages resides. Ensure the ",(0,c.jsx)(s.code,{children:"src"})," folder is present:"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"mkdir -p ~/ros2_ws/src\n"})}),"\n",(0,c.jsx)(s.h3,{id:"2-adding-packages-to-the-workspace",children:"2. Adding Packages to the Workspace"}),"\n",(0,c.jsxs)(s.p,{children:["Clone or create ROS2 packages inside the ",(0,c.jsx)(s.code,{children:"src"})," directory. For example, to clone a package:"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"cd ~/ros2_ws/src\ngit clone <repository-url>\n"})}),"\n",(0,c.jsx)(s.p,{children:"To create a new package:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"cd ~/ros2_ws/src\nros2 pkg create --build-type ament_python <package_name>\n"})}),"\n",(0,c.jsx)(s.h3,{id:"3-building-the-workspace",children:"3. Building the Workspace"}),"\n",(0,c.jsxs)(s.p,{children:["Navigate to the root of your workspace and build it using ",(0,c.jsx)(s.code,{children:"colcon"}),":"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"cd ~/ros2_ws\ncolcon build\n"})}),"\n",(0,c.jsx)(s.h4,{id:"key-points",children:"Key Points:"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["CMake and Python Packages: ",(0,c.jsx)(s.code,{children:"colcon"})," supports both CMake-based and Python-based ROS2 packages."]}),"\n",(0,c.jsxs)(s.li,{children:["Dependencies: Ensure all dependencies are installed. Use ",(0,c.jsx)(s.code,{children:"rosdep"})," to install dependencies:","\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"rosdep install --from-paths src --ignore-src -r -y\n"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.h3,{id:"4-sourcing-the-workspace",children:"4. Sourcing the Workspace"}),"\n",(0,c.jsx)(s.p,{children:"After building the workspace, source it to access the built packages:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"source install/setup.bash\n"})}),"\n",(0,c.jsxs)(s.p,{children:["To make this permanent, add it to your ",(0,c.jsx)(s.code,{children:".bashrc"})," file:"]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:'echo "source ~/ros2_ws/install/setup.bash" >> ~/.bashrc\nsource ~/.bashrc\n'})}),"\n",(0,c.jsx)(s.h3,{id:"5-common-build-options",children:"5. Common Build Options"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Clean Build: Remove the build and install directories before rebuilding:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"rm -rf build install log\ncolcon build\n"})}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Building Specific Packages: Build specific packages instead of the entire workspace:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"colcon build --packages-select <package_name>\n"})}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Parallel Build: Speed up the build process using multiple threads:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"colcon build --parallel-workers <number_of_threads>\n"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.hr,{}),"\n",(0,c.jsx)(s.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,c.jsxs)(s.ol,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Missing Dependencies:"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Use ",(0,c.jsx)(s.code,{children:"rosdep"})," to install missing dependencies:","\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"rosdep install --from-paths src --ignore-src -r -y\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Build Errors:"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Check the ",(0,c.jsx)(s.code,{children:"log"})," directory for detailed error messages."]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Sourcing Issues:"}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:["Ensure the workspace is sourced correctly using:","\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"source install/setup.bash\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.hr,{}),"\n",(0,c.jsx)(s.h2,{id:"advanced-topics",children:"Advanced Topics"}),"\n",(0,c.jsx)(s.h3,{id:"using-overlays",children:"Using Overlays"}),"\n",(0,c.jsx)(s.p,{children:"Overlays allow you to extend or modify an existing workspace without rebuilding everything."}),"\n",(0,c.jsxs)(s.ol,{children:["\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Setup the Overlay Workspace:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"mkdir -p ~/overlay_ws/src\ncd ~/overlay_ws\n"})}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsxs)(s.p,{children:["Add Packages:\nAdd or clone packages into the ",(0,c.jsx)(s.code,{children:"src"})," directory of the overlay workspace."]}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Build the Overlay:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"colcon build --merge-install\n"})}),"\n"]}),"\n",(0,c.jsxs)(s.li,{children:["\n",(0,c.jsx)(s.p,{children:"Source the Overlay:\nSource the overlay workspace after the base workspace:"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-bash",children:"source ~/ros2_ws/install/setup.bash\nsource ~/overlay_ws/install/setup.bash\n"})}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(s.h3,{id:"customizing-the-build-process",children:"Customizing the Build Process"}),"\n",(0,c.jsxs)(s.p,{children:["Modify ",(0,c.jsx)(s.code,{children:"colcon"})," build options by creating a ",(0,c.jsx)(s.code,{children:"colcon.meta"})," file in the workspace root to set specific build configurations for packages."]}),"\n",(0,c.jsx)(s.hr,{}),"\n",(0,c.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,c.jsxs)(s.p,{children:["Building a ROS2 workspace using ",(0,c.jsx)(s.code,{children:"colcon"})," is a foundational skill for ROS2 developers. By following the steps outlined above, you can effectively manage and build your ROS2 projects. Whether you are a beginner setting up your first workspace or an advanced user optimizing builds, ",(0,c.jsx)(s.code,{children:"colcon"})," provides a powerful and flexible toolset for ROS2 development."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var i=n(6540);const c={},r=i.createContext(c);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);